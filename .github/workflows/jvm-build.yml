name: JVM Build

on:
  pull_request:
#     paths-ignore:
#       - '**.md'
#       - '**.svg'
#       - '.github/workflows/debian-build.yml'
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'
      - '**.svg'
      - '.github/workflows/debian-build.yml'
  workflow_dispatch:

jobs:
  jvm-build:
    if: ${{ !contains(github.event.pull_request.head.ref, '#docs') && !(startsWith(github.event.head_commit.message, 'Merge pull request') && contains(github.event.head_commit.message, '#docs')) }}

    runs-on: ubuntu-latest
    timeout-minutes: 15
    concurrency: 
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - uses: docker-practice/actions-setup-docker@master
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Export Properties
        id: properties
        shell: bash
        run: |
          PROPERTIES="$(./gradlew properties --console=plain -q)"
          VERSION="$(echo "$PROPERTIES" | grep "^version:" | cut -f2- -d ' ')"
          echo "::set-output name=version::$VERSION"
          echo "SPP_PLATFORM_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Assemble platform
        run: ./gradlew -p platform assemble

      - name: Start platform
        run: ./gradlew -p platform updateDockerFiles composeUp -Dbuild.profile=jvm

      - name: Docker IPs
        run: docker inspect --format='{{.Name}} - {{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker ps -aq)
      - name: Set SPP_PLATFORM_HOST
        run: SPP_PLATFORM_HOST=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker ps -aqf "name=spp-platform")) && echo "SPP_PLATFORM_HOST=$SPP_PLATFORM_HOST" >> $GITHUB_ENV
      - name: Wait for platform
        run: until $(curl --insecure --output /dev/null --silent --fail https://localhost:5445/api/new-token?access_token=change-me); do printf '.'; sleep 5; done && SPP_JWT_TOKEN=$(curl --insecure https://localhost:5445/api/new-token?access_token=change-me) && echo "SPP_JWT_TOKEN=$SPP_JWT_TOKEN" >> $GITHUB_ENV
      - name: Wait for skywalking
        run: |
          until $(curl --header "Authorization: Bearer ${{ env.SPP_JWT_TOKEN }}" --insecure --output /dev/null --silent --fail https://localhost:5445/health); do printf '.'; sleep 5; done
      - run: sleep 30s

      - name: Run platform integration tests
        run: ./gradlew -p platform test -Dtest.profile=integration -Dbuild.profile=jvm

      - run: ./gradlew :platform:composeLogs
        if: ${{ always() }}

      - name: Upload docker logs artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: docker-logs
          path: ./platform/build/containers-logs
