name: Debian Build

on:
  pull_request:
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'
      - '**.svg'
      - '.github/workflows/jvm-debian-build.yml'
  workflow_dispatch:

jobs:
  debian-build:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    outputs:
      version: ${{ steps.properties.outputs.version }}
    steps:
      - uses: docker-practice/actions-setup-docker@master
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Export Properties
        id: properties
        shell: bash
        run: |
          PROPERTIES="$(./gradlew properties --console=plain -q)"
          VERSION="$(echo "$PROPERTIES" | grep "^version:" | cut -f2- -d ' ')"
          echo "::set-output name=version::$VERSION"
          echo "SPP_PLATFORM_VERSION=$VERSION" >> $GITHUB_ENV
      - name: Build & start platform
        run: ./gradlew shadowJar nativeImage updateDockerFiles composeUp -Dbuild.profile=debian
      - name: Compress platform
        run: curl -O -J -L https://github.com/upx/upx/releases/download/v3.96/upx-3.96-amd64_linux.tar.xz && tar -xJf upx-3.96-amd64_linux.tar.xz && ./upx-3.96-amd64_linux/upx platform/build/graal/spp-platform
      - name: Compress CLI
        run: ./upx-3.96-amd64_linux/upx interfaces/cli/build/graal/spp-cli
      - name: Docker IPs
        run: docker inspect --format='{{.Name}} - {{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker ps -aq)
      - name: Set SPP_PLATFORM_HOST
        run: SPP_PLATFORM_HOST=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker ps -aqf "name=spp-platform")) && echo "SPP_PLATFORM_HOST=$SPP_PLATFORM_HOST" >> $GITHUB_ENV
      - name: Wait for platform
        run: until $(curl --insecure --output /dev/null --silent --fail https://${{ env.SPP_PLATFORM_HOST }}:5445/api/new-token?access_token=change-me); do printf '.'; sleep 5; done && SPP_JWT_TOKEN=$(curl --insecure https://${{ env.SPP_PLATFORM_HOST }}:5445/api/new-token?access_token=change-me) && echo "SPP_JWT_TOKEN=$SPP_JWT_TOKEN" >> $GITHUB_ENV
      - name: Wait for skywalking
        run: |
          until $(curl --header "Authorization: Bearer ${{ env.SPP_JWT_TOKEN }}" --insecure --output /dev/null --silent --fail https://${{ env.SPP_PLATFORM_HOST }}:5445/health); do printf '.'; sleep 5; done
      - name: "[CLI] Get developers"
        run: ./interfaces/cli/build/graal/spp-cli -v -c ./platform/config/spp-platform.crt -k ./platform/config/spp-platform.key admin get-developers
      - name: "[CLI] Add developer"
        run: ./interfaces/cli/build/graal/spp-cli -v -c ./platform/config/spp-platform.crt -k ./platform/config/spp-platform.key admin add-developer test
      - name: "[CLI] Refresh developer token"
        run: ./interfaces/cli/build/graal/spp-cli -v -c ./platform/config/spp-platform.crt -k ./platform/config/spp-platform.key admin refresh-developer-token test
      - name: "[CLI] Get roles"
        run: ./interfaces/cli/build/graal/spp-cli -v -c ./platform/config/spp-platform.crt -k ./platform/config/spp-platform.key admin get-roles
      - name: "[CLI] Get role permissions"
        run: ./interfaces/cli/build/graal/spp-cli -v -c ./platform/config/spp-platform.crt -k ./platform/config/spp-platform.key admin get-role-permissions role_manager
      - name: "[CLI] Add role"
        run: ./interfaces/cli/build/graal/spp-cli -v -c ./platform/config/spp-platform.crt -k ./platform/config/spp-platform.key admin add-role tester
      - name: "[CLI] Add role permission"
        run: ./interfaces/cli/build/graal/spp-cli -v -c ./platform/config/spp-platform.crt -k ./platform/config/spp-platform.key admin add-role-permission tester ADD_DEVELOPER
      - name: "[CLI] Add developer role"
        run: ./interfaces/cli/build/graal/spp-cli -v -c ./platform/config/spp-platform.crt -k ./platform/config/spp-platform.key admin add-developer-role test tester
      - name: "[CLI] Get developer roles"
        run: ./interfaces/cli/build/graal/spp-cli -v -c ./platform/config/spp-platform.crt -k ./platform/config/spp-platform.key admin get-developer-roles test
      - name: "[CLI] Get developer permissions"
        run: ./interfaces/cli/build/graal/spp-cli -v -c ./platform/config/spp-platform.crt -k ./platform/config/spp-platform.key admin get-developer-permissions test
      - name: "[CLI] Add access permission"
        run: ACCESS_PERMISSION_ID=$(./interfaces/cli/build/graal/spp-cli -v -c ./platform/config/spp-platform.crt -k ./platform/config/spp-platform.key admin add-access-permission -l spp.example.webapp.model.User WHITE_LIST | grep -oP '(?<="id"\s:\s")[^"]*') && echo "ACCESS_PERMISSION_ID=$ACCESS_PERMISSION_ID" >> $GITHUB_ENV
      - name: "[CLI] Add role access permission"
        run: ./interfaces/cli/build/graal/spp-cli -v -c ./platform/config/spp-platform.crt -k ./platform/config/spp-platform.key admin add-role-access-permission tester ${{ env.ACCESS_PERMISSION_ID }}
      - name: "[CLI] Get access permissions"
        run: ./interfaces/cli/build/graal/spp-cli -v -c ./platform/config/spp-platform.crt -k ./platform/config/spp-platform.key admin get-access-permissions
      - name: "[CLI] Get developer access permissions"
        run: ./interfaces/cli/build/graal/spp-cli -v -c ./platform/config/spp-platform.crt -k ./platform/config/spp-platform.key admin get-developer-access-permissions test
      - name: "[CLI] Get role access permissions"
        run: ./interfaces/cli/build/graal/spp-cli -v -c ./platform/config/spp-platform.crt -k ./platform/config/spp-platform.key admin get-role-access-permissions tester
      - name: "[CLI] Remove role access permission"
        run: ./interfaces/cli/build/graal/spp-cli -v -c ./platform/config/spp-platform.crt -k ./platform/config/spp-platform.key admin remove-role-access-permission tester ${{ env.ACCESS_PERMISSION_ID }}
      - name: "[CLI] Remove access permission"
        run: ./interfaces/cli/build/graal/spp-cli -v -c ./platform/config/spp-platform.crt -k ./platform/config/spp-platform.key admin remove-access-permission ${{ env.ACCESS_PERMISSION_ID }}
      - name: "[CLI] Remove developer role"
        run: ./interfaces/cli/build/graal/spp-cli -v -c ./platform/config/spp-platform.crt -k ./platform/config/spp-platform.key admin remove-developer-role test tester
      - name: "[CLI] Remove role permission"
        run: ./interfaces/cli/build/graal/spp-cli -v -c ./platform/config/spp-platform.crt -k ./platform/config/spp-platform.key admin remove-role-permission tester ADD_DEVELOPER
      - name: "[CLI] Remove role"
        run: ./interfaces/cli/build/graal/spp-cli -v -c ./platform/config/spp-platform.crt -k ./platform/config/spp-platform.key admin remove-role tester
      - name: "[CLI] Remove developer"
        run: ./interfaces/cli/build/graal/spp-cli -v -c ./platform/config/spp-platform.crt -k ./platform/config/spp-platform.key admin remove-developer test
      - name: "[CLI] Add live breakpoint"
        run: ./interfaces/cli/build/graal/spp-cli -v -c ./platform/config/spp-platform.crt -k ./platform/config/spp-platform.key developer add-live-breakpoint -h 100 spp.example.webapp.model.User 48
      - name: "[CLI] Add live log"
        run: ./interfaces/cli/build/graal/spp-cli -v -c ./platform/config/spp-platform.crt -k ./platform/config/spp-platform.key developer add-live-log -h 100 spp.example.webapp.model.User 48 test-message
      - name: "[CLI] Get live instruments"
        run: ./interfaces/cli/build/graal/spp-cli -v -c ./platform/config/spp-platform.crt -k ./platform/config/spp-platform.key developer get-live-instruments
      - name: "[CLI] Get live breakpoints"
        run: ./interfaces/cli/build/graal/spp-cli -v -c ./platform/config/spp-platform.crt -k ./platform/config/spp-platform.key developer get-live-breakpoints
      - name: "[CLI] Get live logs"
        run: ./interfaces/cli/build/graal/spp-cli -v -c ./platform/config/spp-platform.crt -k ./platform/config/spp-platform.key developer get-live-logs
      - name: "[CLI] Remove live instruments"
        run: ./interfaces/cli/build/graal/spp-cli -v -c ./platform/config/spp-platform.crt -k ./platform/config/spp-platform.key developer remove-live-instruments spp.example.webapp.model.User 48
      - name: Run integration tests
        run: ./gradlew test -Dtest.profile=integration -Dbuild.profile=debian
      - name: Build S++ Plugin
        run: ./gradlew buildPlugin
      - name: Download platform logs from container
        if: ${{ always() }}
        run: docker cp $(docker ps -aqf "name=spp-platform"):/opt/sourceplusplus/logs/spp-platform.log .
      - name: Upload platform logs artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: spp-platform.log
          path: ./spp-platform.log
      - name: Download probe logs from container
        if: ${{ always() }}
        run: docker cp $(docker ps -aqf "name=spp-example-webapp"):/tmp/spp-probe/logs/skywalking-api.log .
      - name: Upload probe logs artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: spp-probe.log
          path: ./skywalking-api.log
      - name: Upload docker logs artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: docker-compose.log
          path: ./build/docker-compose.log
      - name: Build release dist
        run: |
          mkdir -p dist/spp-platform-${{ env.SPP_PLATFORM_VERSION }}/config \
          && mkdir -p dist/spp-platform-${{ env.SPP_PLATFORM_VERSION }}/probe \
          && cp probe/control/build/libs/spp-probe-${{ env.SPP_PLATFORM_VERSION }}.jar dist/spp-platform-${{ env.SPP_PLATFORM_VERSION }}/probe \
          && cp platform/config/spp-platform.yml dist/spp-platform-${{ env.SPP_PLATFORM_VERSION }}/config \
          && cp platform/build/graal/spp-platform dist/spp-platform-${{ env.SPP_PLATFORM_VERSION }} \
          && cp interfaces/cli/build/graal/spp-cli dist/spp-platform-${{ env.SPP_PLATFORM_VERSION }} \
          && (cd dist && tar -zcvf ../spp-platform-${{ env.SPP_PLATFORM_VERSION }}-linux-amd64.tar.gz *)
      - name: Upload spp-platform
        uses: actions/upload-artifact@v2
        with:
          name: spp-platform-${{ env.SPP_PLATFORM_VERSION }}-linux-amd64.tar.gz
          path: ./spp-platform-${{ env.SPP_PLATFORM_VERSION }}-linux-amd64.tar.gz
      - name: Upload S++ Plugin
        uses: actions/upload-artifact@v2
        with:
          name: spp-plugin-${{ env.SPP_PLATFORM_VERSION }}.zip
          path: ./interfaces/marker/build/spp-plugin-${{ env.SPP_PLATFORM_VERSION }}.zip
      - name: Upload S++ SkyWalking processor
        uses: actions/upload-artifact@v2
        with:
          name: spp-processor-${{ env.SPP_PLATFORM_VERSION }}.jar
          path: ./processor/build/libs/spp-processor-${{ env.SPP_PLATFORM_VERSION }}.jar

  releaseDraft:
    name: Release Draft
    needs: [debian-build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:

      - name: Remove Old Release Drafts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -H "Authorization: Bearer $GITHUB_TOKEN" https://api.github.com/repos/$GITHUB_REPOSITORY/releases \
            | tr '\r\n' ' ' \
            | jq '.[] | select(.draft == true) | .id' \
            | xargs -I '{}' \
          curl -X DELETE -H "Authorization: Bearer $GITHUB_TOKEN" https://api.github.com/repos/$GITHUB_REPOSITORY/releases/{}

      - name: Create Release Draft
        id: createDraft
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.debian-build.outputs.version }}
          release_name: v${{ needs.debian-build.outputs.version }}
          body: ${{ needs.build.outputs.changelog }}
          draft: true

      - name: Download Source++ Plugin artifact
        uses: actions/download-artifact@v2
        with:
          name: spp-plugin-${{ needs.debian-build.outputs.version }}.zip

      - name: Upload Source++ Plugin asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.createDraft.outputs.upload_url }}
          asset_path: ./spp-plugin-${{ needs.debian-build.outputs.version }}.zip
          asset_name: spp-plugin-${{ needs.debian-build.outputs.version }}.zip
          asset_content_type: application/zip

      - name: Download Source++ SkyWalking processor artifact
        uses: actions/download-artifact@v2
        with:
          name: spp-processor-${{ needs.debian-build.outputs.version }}.jar

      - name: Upload Source++ SkyWalking processor asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.createDraft.outputs.upload_url }}
          asset_path: ./spp-processor-${{ needs.debian-build.outputs.version }}.jar
          asset_name: spp-processor-${{ needs.debian-build.outputs.version }}.jar
          asset_content_type: application/java-archive

      - name: Download spp-platform artifact (Linux)
        uses: actions/download-artifact@v2
        with:
          name: spp-platform-${{ needs.debian-build.outputs.version }}-linux-amd64.tar.gz

      - name: Upload spp-platform asset (Linux)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.createDraft.outputs.upload_url }}
          asset_path: ./spp-platform-${{ needs.debian-build.outputs.version }}-linux-amd64.tar.gz
          asset_name: spp-platform-${{ needs.debian-build.outputs.version }}-linux-amd64.tar.gz
          asset_content_type: application/gzip

  docker-push:
    needs: [debian-build, releaseDraft]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Download spp-platform artifact (Linux)
        uses: actions/download-artifact@v2
        with:
          name: spp-platform-${{ needs.debian-build.outputs.version }}-linux-amd64.tar.gz
          path: ./docker/spp-platform

      - name: Untar spp-platform
        run: cd ./docker/spp-platform && tar -zxvf spp-platform-${{ needs.debian-build.outputs.version }}-linux-amd64.tar.gz --strip-components=1

      - name: Build spp-platform tagged Docker image
        run: cd ./docker/spp-platform && docker build . --file Dockerfile --tag sourceplusplus/spp-platform:${{ needs.debian-build.outputs.version }}

      - name: Retag spp-platform tagged Docker image to latest
        run: docker tag sourceplusplus/spp-platform:${{ needs.debian-build.outputs.version }} sourceplusplus/spp-platform:latest

      - name: Push spp-platform latest Docker image
        run: docker push sourceplusplus/spp-platform:latest

      - name: Download Source++ SkyWalking processor
        uses: actions/download-artifact@v2
        with:
          name: spp-processor-${{ needs.debian-build.outputs.version }}.jar
          path: ./docker/spp-oap-server

      - name: Build spp-oap-server tagged Docker image
        run: cd ./docker/spp-oap-server && docker build . --file Dockerfile --tag sourceplusplus/spp-oap-server:${{ needs.debian-build.outputs.version }}

      - name: Retag spp-oap-server tagged Docker image to latest
        run: docker tag sourceplusplus/spp-oap-server:${{ needs.debian-build.outputs.version }} sourceplusplus/spp-oap-server:latest

      - name: Push spp-oap-server latest Docker image
        run: docker push sourceplusplus/spp-oap-server:latest

  # Delete build artifacts
  cleanup:
    name: Cleanup
    needs: [debian-build, releaseDraft, docker-push]
    runs-on: ubuntu-latest
    steps:
      - name: Delete spp-platform (Linux)
        uses: geekyeggo/delete-artifact@v1
        with:
          name: spp-platform-${{ needs.debian-build.outputs.version }}-linux-amd64.tar.gz

      - name: Delete Source++ Plugin
        uses: geekyeggo/delete-artifact@v1
        with:
          name: spp-plugin-${{ needs.debian-build.outputs.version }}.zip

      - name: Delete Source++ SkyWalking processor
        uses: geekyeggo/delete-artifact@v1
        with:
          name: spp-processor-${{ needs.debian-build.outputs.version }}.jar
